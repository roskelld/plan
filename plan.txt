+ Spent the week going through a somewhat painful update from Unreal 5.4.4 to 5.5.4. My blame on it being Unreal has simmered as I found that I hit more issues that were either already in the build or things I've added in belief that it would fix the issues I was seeing from the upgrade.
+ Found a map change crash when objects are on fire. Traced it back to a build called `new new new fire`, I think the issue might be related to the recent fire update. Just a hunch.
+ Fixed crash. Crash was easy to fix, what wasn't was the new crash that crept in due to the cooker not including a gameplayeffect. 
+ Working on a html export of the .plan system so posts are public.
+ Created scripts to generate webpage version of .plan and rss feed.
+ Back on build stability bugs hoping to get 5.5.4 ready to merge with main.
+ Hopefully the last major issue from the 5.5.4 upgrade is fixing the account log on issues.
+ 5.5.4 is now main. Also, added meta tags to the plan so link embeds show the latest post.
+ Cleaned up console warning messages. Feels good. 
+ Working on updating the skelve generation system so layouts have more governance over what is spawned.
+ First public playtest of 5.5.4 build and it went much smoother than last week. One crash relating to saving actors on map change related to missing attribute data. Success overall.
+ Been back on the skelve generation system. Now uses a multipass format: Layout->Content->Block unused entrances. Allows for more passes to be added in future.
+ One big change to the updated skelve generator is layout validity. When attempting to generate a new chamber (level chunk) it tests the space using a box overlap to see if it will fit or reject. 
+ Wrote a SnapToCeiling command for UnrealEd. Why spend a few minutes moving actors, when you can spent a few hours writing and debugging a command. I can see it paying off in the future.
+ Testing an early version of the new Skelve generator. The phase based generation is in now: Layout, content, exit capping. I see some refactoring already that will help give more data that's needed. Next phase is tackling the biome shifting using height as a driver.
+ Test failed successfully. Levels failed to load on clients, I believe due to me using FlushLevelStreaming which stopped code from running until the level load was complete, but this pause caused client sync issues. The test gave us enough to think over things and present a new solution using OnLevelShown delegates to handle future updates, no need to pause code.
+ Added a chamber graph so we eventually spawn chambers with an understanding of their surroundings, helping build out logical spaces using rules instead of generating skelves using pure random items from a lightly filtered list.
+ Rewriting what was the POI spawning system, which I'm now calling the Chamber Props system. It spawns crafted scenes of actors at predefined locations in a skelve with the intention of looking appropriate to the surroundings. The goal is to craft a language using gameplaytags where these can be built independent of location and picked to spawn based on the applied tags. 